
==================== FINAL INTERFACE ====================
2018-04-16 07:54:57.454545 UTC

interface main:EX.P1 8022
  interface hash: a26f686e5ade63a1963bfc8f5897397c
  ABI hash: 16c5a5d485470d6aa56d90ddabf97e91
  export-list hash: 1f8497222edf7b04e3a7d3684595f11c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 8f03974e084493d0ba40386acfdc516f
  sig of: Nothing
  used TH splices: False
  where
exports:
  EX.P1.p1
module dependencies:
package dependencies: base-4.10.1.0* ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Real 3c62834bc25e762eabc44149c4cc142d
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
a2448f67091ba1a0eaf91934561d8699
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module EX.P1.$trModule3 EX.P1.$trModule1) -}
67087c5cfafa51cf8b36a759fe0dc52f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS EX.P1.$trModule2) -}
a211aed12e31a949466ad071aee0177a
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EX.P1"#) -}
6bcf95abeb60259706d1bc9b31ebcb17
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS EX.P1.$trModule4) -}
8ccf8a391178a4e02451dbacba3c96bc
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
3749618a9be1548016461aaf5bbc5034
  $wp1 :: GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 let {
                   y :: GHC.Prim.Int# = GHC.Prim.-# ww 1#
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># 1# y) of wild {
                   GHC.Types.False
                   -> letrec {
                        $wgo :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int#
                          <join 2> {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0] -}
                        = \ (w :: GHC.Prim.Int#) (ww1 :: GHC.Prim.Int#) ->
                          case GHC.Classes.modInt# w 3# of ww2 {
                            DEFAULT
                            -> case GHC.Classes.modInt# w 5# of ww3 {
                                 DEFAULT
                                 -> case GHC.Prim.tagToEnum#
                                           @ GHC.Types.Bool
                                           (GHC.Prim.==# w y) of wild1 {
                                      GHC.Types.False -> $wgo (GHC.Prim.+# w 1#) ww1
                                      GHC.Types.True -> ww1 }
                                 0#
                                 -> case GHC.Prim.tagToEnum#
                                           @ GHC.Types.Bool
                                           (GHC.Prim.==# w y) of wild1 {
                                      GHC.Types.False -> $wgo (GHC.Prim.+# w 1#) (GHC.Prim.+# ww1 w)
                                      GHC.Types.True -> GHC.Prim.+# ww1 w } }
                            0#
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.==# w y) of wild1 {
                                 GHC.Types.False -> $wgo (GHC.Prim.+# w 1#) (GHC.Prim.+# ww1 w)
                                 GHC.Types.True -> GHC.Prim.+# ww1 w } }
                      } in
                      $wgo 1# 0#
                   GHC.Types.True -> 0# }) -}
fbffc3e4a71ca385c8e9e160198e42bd
  p1 :: GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case EX.P1.$wp1 ww1 of ww2 { DEFAULT -> GHC.Types.I# ww2 } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

